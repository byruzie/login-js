ğŸŸ¡ 1. Projeto com Set: Sistema de Tags Ãšnicas
Uma mini interface onde o usuÃ¡rio pode digitar tags (como num formulÃ¡rio de blog) e o sistema impede tags repetidas.

ğŸ§© Por que usar Set?
Set nÃ£o permite valores duplicados.
Perfeito para garantir que cada tag sÃ³ apareÃ§a uma vez.

ğŸ”µ 2. Projeto com Map: Carrinho de Compras com Quantidade
Um carrinho onde vocÃª adiciona produtos e suas quantidades sÃ£o atualizadas se o mesmo item for adicionado de novo.

ğŸ§© Por que usar Map?
Map permite usar a chave como o nome do produto e o valor como a quantidade.
Permite buscar rapidamente, atualizar ou remover produtos.

ğŸŸ¢ 3. Projeto com Object: Cadastro de UsuÃ¡rio
VocÃª coleta informaÃ§Ãµes como nome, idade e email e salva em um objeto.

ğŸ§© Por que usar Object?
Objetos sÃ£o Ã³timos para representar entidades com propriedades nomeadas.

ğŸ”´ 4. Projeto com Array: Lista de Tarefas (To-Do List)
Crie uma lista de tarefas onde o usuÃ¡rio pode adicionar, remover e marcar como concluÃ­da.

ğŸ§© Por que usar Array?
Arrays sÃ£o ideais para armazenar listas ordenadas de dados.
VocÃª pode iterar, filtrar, mapear etc.

ğŸŒŸ BÃ´nus: Projeto que usa todos juntos
"Gerenciador de Eventos"

Lista de eventos (Array)
Cada evento tem detalhes (Object)
Participantes Ãºnicos (Set)
Lista de presenÃ§a por ID (Map com id â†’ presenÃ§a)